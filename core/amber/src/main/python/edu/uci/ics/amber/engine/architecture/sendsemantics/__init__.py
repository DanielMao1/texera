# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: edu/uci/ics/amber/engine/architecture/sendsemantics/datatransferpolicy2.proto
# plugin: python-betterproto
import betterproto
from dataclasses import dataclass
from typing import List


@dataclass(eq=False, repr=False)
class DataSendingPolicy(betterproto.Message):
    one_to_one_policy: "OneToOnePolicy" = betterproto.message_field(
        1, group="sealed_value"
    )
    round_robin_policy: "RoundRobinPolicy" = betterproto.message_field(
        2, group="sealed_value"
    )


@dataclass(eq=False, repr=False)
class OneToOnePolicy(betterproto.Message):
    policy_tag: "__common__.LinkIdentity" = betterproto.message_field(1)
    batch_size: int = betterproto.int32_field(2)
    receivers: List["__common__.ActorVirtualIdentity"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RoundRobinPolicy(betterproto.Message):
    policy_tag: "__common__.LinkIdentity" = betterproto.message_field(1)
    batch_size: int = betterproto.int32_field(2)
    receivers: List["__common__.ActorVirtualIdentity"] = betterproto.message_field(3)


from ... import common as __common__
